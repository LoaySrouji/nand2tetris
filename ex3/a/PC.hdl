/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t]==1) out[t+1] = 0
 * else if (load[t]==1)  out[t+1] = in[t]
 * else if (inc[t]==1)   out[t+1] = out[t] + 1  (integer addition)
 * else                  out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in=regOut, out=increasedY);
    Mux16(a=regOut, b=increasedY, sel=inc, out=newY);
    Or(a=load, b=reset, out=zeroY);
    Mux16(a=false, b=in, sel=load, out=changedX);
    ALU(x=changedX, y=newY, zx=reset, nx=false, zy=zeroY, ny=false, f=true, ng=false, out=aluOut);
    Register(in=aluOut, load=true, out=regOut, out=out);
}




